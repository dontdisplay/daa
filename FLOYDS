#include<stdio.h>
#include<stdlib.h>

int D[50][50];
int n;

int min(int a,int b)
{
return (a<b) ? a:b;
}

void printmatrix()
{
    int i,j;
    for(i=1;i<=n;i++)
{
    for(j=1;j<=n;j++)
    {
        printf("%d\t",D[i][j]);
    }
    printf("\n");
}

}


void floyds(void)
{
int i,j,k;
for(k=1;k<=n;k++)
{
 for(i=1;i<=n;i++)
{
for(j=1;j<=n;j++)
{
    if(i==j)
        D[i][j]=0;
D[i][j]=min(D[i][j],D[i][k]+D[k][j]);
}
}
printf("With %d as intermediate vertex distance matrix is\n",k);
printmatrix();
}

}


int main()
{
int i,j;
printf("Enter the number of vertices\n");
scanf("%d",&n);
printf("Enter the distance matrix\n");
for(i=1;i<=n;i++)
{
	for(j=1;j<=n;j++)
	{
	scanf("%d",&D[i][j]);
	}
}

printf("\nInitial distance matrix\n");

printmatrix();

floyds();


printf("Stortest paths are\n");

for(i=1;i<=n;i++)
{
for(j=1;j<=n;j++)
{
printf("\n<%d -> %d> = %d",i,j,D[i][j]);
}}}
