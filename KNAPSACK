#include <stdio.h>
#include <stdlib.h>

#define MAX 200

int V[MAX][MAX],w[MAX],v[MAX],mvs[MAX];
int count=0;

int max(int a,int b)
{
    return (a>b)? a : b;
}

void knapsack(int n,int W)
{
    int i,j;
    for(i=0;i<=n;i++)
    {
        for(j=0;j<=W;j++)
        {
            if(i==0 || j==0)
                V[i][j]=0;
            else if(w[i-1]<=j)
            {
                V[i][j]=max(V[i-1][j],v[i-1]+V[i-1][j-w[i-1]]);
            }
            else
            {
                V[i][j]=V[i-1][j];
            }
        }
    }


printf("The knapsack matrix is\n");

for(i=0;i<=n;i++)
{
    for(j=0;j<=W;j++)
    {
        printf("%d\t",V[i][j]);
    }
    printf("\n");
}

printf("\n\nMAX PROFIT - %d",V[n][W]);
    i=n,j=W;
    while(i>0 && j>0)
    {
        if(i==0)
            break;
        if(V[i][j]!=V[i-1][j])
        {
        mvs[count++]=i;

        j=j-w[i-1];
        i--;
        }
        else{
            i--;
        }
    }
}
int main()
{
   int n,W,i;
   printf("Enter the number of items\n");
   scanf("%d",&n);
   printf("Enter the capacity of knapsack\n");
   scanf("%d",&W);
   printf("Enter the weights of items\n");
   for(i=0;i<n;i++)
   {
       scanf("%d",&w[i]);
   }
   printf("Enter the values of items\n");
   for(i=0;i<n;i++)
   {
       scanf("%d",&v[i]);
   }
   knapsack(n,W);
   printf("\n\nMost valuable subset is \n");
   printf("[");
   for(i=0;i<count;i++)
   {
       printf("%d,",mvs[i]);

   }
   printf("]");
}
